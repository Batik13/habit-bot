from __future__ import annotations
from typing import Protocol, Optional, Iterable, List
from app.domain.models import User, Habit, LogEntry

class UserRepo(Protocol):
    def get(self, user_id: int) -> Optional[User]: ...
    def upsert(self, user: User) -> None: ...

class HabitRepo(Protocol):
    def list_for_user(self, user_id: int) -> List[Habit]: ...
    def get(self, user_id: int, habit_id: int) -> Optional[Habit]: ...
    def add(self, habit: Habit) -> int: ...
    def update(self, habit: Habit) -> None: ...

class LogRepo(Protocol):
    def upsert_answer(self, entry: LogEntry) -> None: ...
    def get_by_date(self, user_id: int, habit_id: int, date: str) -> Optional[LogEntry]: ...
    def get_last_days(self, user_id: int, habit_id: int, n: int) -> List[LogEntry]: ...